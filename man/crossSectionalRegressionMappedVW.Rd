% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cross-sectional-regression-vw.R
\name{crossSectionalRegressionMappedVW}
\alias{crossSectionalRegressionMappedVW}
\title{Cross-Sectional Regression with Volume Weighting for Mapped Volume}
\usage{
crossSectionalRegressionMappedVW(
  returns,
  volume,
  start,
  end,
  h,
  nr_pc,
  d,
  divide,
  maps
)
}
\arguments{
\item{returns}{A numeric matrix, the returns data.}

\item{volume}{A numeric matrix, the volume data.}

\item{start}{An integer, the start of the days range for which to perform regression.}

\item{end}{An integer, the end of the days range for which to perform regression.}

\item{h}{An integer, the number of recent historical days to be used.}

\item{nr_pc}{An integer, the number of eigen portfolios to extract.}

\item{d}{An integer, the width for rolling mean calculation on volume.}

\item{divide}{A logical value, if TRUE, the function divides the product of returns and rolling mean volume by the volume. If FALSE, it divides the product of returns and volume by the rolling mean volume.}

\item{map_list}{A list of functions to be applied on volume data.}
}
\value{
A list of numeric matrices of predicted returns where each element corresponds to map function in `map_list`, and each matrix where a row corresponds to a day in the given `start:end` range and each column corresponds to a stock.
}
\description{
This function performs cross-sectional regression on volume-weighted returns on a range of days,
using recent historical data and a list of functions to map the volume data. For each mapping function
in `map_list`, it calculates the volume-weighted returns, extracts an eigenportfolio from the historical data,
fits a linear model between the returns and the eigenportfolio for each day in the range, and returns the negative residuals
from these models as predicted returns.
}
\examples{
#Example data
returns <- matrix(rnorm(25), 5, 5)
volume <- matrix(rnorm(25), 5, 5)
start <- 2
end <- 5
h <- 4
nr_pc <- 2
d <- 2
divide <- TRUE
maps <- list(function(x) x^2, function(x) log2(x+1))
#Use the function
crossSectionalRegressionMappedVW(returns, volume, start, end, h, nr_pc, d, divide, maps)

}
